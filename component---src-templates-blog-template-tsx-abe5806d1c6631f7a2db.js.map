{"version":3,"sources":["webpack:///./src/layouts/post.tsx","webpack:///./src/templates/blog-template.tsx"],"names":["Post","children","hideHeader","data","useStaticQuery","Provider","value","className","siteTitle","site","siteMetadata","title","BlogTemplate","markdownRemark","frontmatter","html","to","date","dangerouslySetInnerHTML","__html"],"mappings":"0NAyCeA,EAxBa,SAAC,GAAqC,IAAnCC,EAAmC,EAAnCA,SAAmC,IAAzBC,kBAAyB,SAC1DC,EAAOC,yBAAe,cAU5B,OACE,kBAAC,IAAaC,SAAd,CAAuBC,MAAO,CAAEJ,eAC9B,kBAAC,IAAD,CACEK,UAAU,SACVC,UAAWL,EAAKM,KAAKC,aAAaC,QAEpC,yBAAKJ,UAAU,gBACb,8BAAON,MCsBAW,UAxCsD,SAAC,GAAa,IACzEC,EADyE,EAAXV,KAC9DU,eAER,GAAuB,OAAnBA,EACF,OAAO,qCAJwE,IAMzEC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACrB,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAKJ,MAAOG,EAAYH,QACxB,yBAAKJ,UAAU,4CACb,yBAAKA,UAAU,wBACb,kBAAC,OAAD,CAAMS,GAAG,KAAT,UACA,2BAAIF,EAAYG,OAElB,yBAAKV,UAAU,QACb,4BAAKO,EAAYH,OACjB,yBACEJ,UAAU,0BACVW,wBAAyB,CAAEC,OAAQJ","file":"component---src-templates-blog-template-tsx-abe5806d1c6631f7a2db.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { FC } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Header from '../components/header';\nimport '../styles/tailwind.css';\nimport { IndexContext } from '../contexts';\n\nexport interface PostProps {\n  hideHeader?: boolean;\n}\n\nconst Post: FC<PostProps> = ({ children, hideHeader = false }) => {\n  const data = useStaticQuery(graphql`\n    query PostSiteTitle {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    } \n  `);\n\n  return (\n    <IndexContext.Provider value={{ hideHeader }}>\n      <Header\n        className=\"header\"\n        siteTitle={data.site.siteMetadata.title}\n      />\n      <div className=\"mx-auto my-0\">\n        <main>{children}</main>\n      </div>\n    </IndexContext.Provider>\n  );\n};\n\nexport default Post;\n","import React, { FC } from 'react';\nimport { graphql, PageProps, Link } from 'gatsby';\nimport './blog-template.css';\nimport SEO from '../components/seo';\nimport Post from '../layouts/post';\n\ninterface Post {\n  html: string;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    title: string;\n    date: string;\n  };\n}\n\nconst BlogTemplate: FC<PageProps<{ markdownRemark: Post | null }>> = ({ data }) => {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n\n  if (markdownRemark === null)\n    return <></>;\n\n  const { frontmatter, html } = markdownRemark;\n  return (\n    <Post>\n      <SEO title={frontmatter.title} />\n      <div className=\"pt-16 md:pt-16 blog__blog-post-container\">\n        <div className=\"flex justify-between\">\n          <Link to=\"/\">&lt; Back</Link>\n          <p>{frontmatter.date}</p>\n        </div>\n        <div className=\"mt-4\">\n          <h1>{frontmatter.title}</h1>\n          <div\n            className=\"blog__blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </Post>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } published: { eq: true } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n      }\n    }\n  }\n`;\n\nexport default BlogTemplate;\n"],"sourceRoot":""}